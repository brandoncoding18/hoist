import { useSelector } from "react-redux";
import { useState } from "react";
import Database from "../Database";
import { Chart as ChartJS, ArcElement, Tooltip, Legend } from "chart.js";
import { Doughnut } from "react-chartjs-2";
import EditableUserProfile from './EditableUserProfile';
import UserProfile from './UserProfile';




function Profile() {
    const now = new Date(Date.now());
    const defaultBirthday = new Date(now.getTime() + 86400000);
    var {user} = useSelector((state) => state.loginReducer);
    if(!user) {
        user = { "_id": "0", "username": "guest", "maxes" : {}
    }
}
    const [editMode, setEditMode] = useState(false);
    const [username, setUserName] = useState(user.username);
    const [password, setPassword] = useState(user.password);
    const [name, setName] = useState(user.name);
    const [email, setEmail] = useState(user.email);
    const [age, setAge] = useState(user.age);
    const [training_age, setTraining_Age] = useState(user.training_age)

    const stored = {name, username, password, age, training_age};

    function handleEditComplete(result) {
        if (result != null) {
            setName(result.name);
        }        
        setEditMode(false);
    }

    function handleEditStart() {
        
        setEditMode(true);
    }

    return (
        <div>
            <div>                 
                {
                    editMode
                        ? <>
                            <h1>My Profile</h1>
                            <EditableUserProfile
                                    stored={stored}
                                    editCompleteCallback={handleEditComplete}                            
                            />
                        </>
                        : <>
                            <h1>My Profile</h1>
                            <UserProfile
                                    stored={stored}
                                    startEditCallback={() => setEditMode(true)}
                            />
                            <button onClick={()=>handleEditStart()}>Edit </button>
                        </>
                        
                }            
            </div>
        </div>
    );
}
    /*if(!user) {
        content = <div>{content}Log in or register to view your profile</div>
    }
    else {
        content = <div>{content} </div>


        
    } if(maxes) {
        return(<div>Profile


            <h4>Track your maxes here, and view your progression of each of your lifts on a graph!</h4>
            {}
            <h6> {JSON.stringify(maxes)} </h6>
            <button>&larr;</button>
            <button>&rarr;</button>        </div>)


    }
    return(<div>Profile

        <h4>No maxes found</h4>
       

    </div>)
    */
   //return(<div>{content}</div>)
    
        
        
        

    /*
    return(<div>Profile
    <h1>Track your maxes here, and view your progression on a graph!</h1>

    <h3>Max Squat: {maxSquat} </h3>
    <h3>Max Bench: {maxBench}</h3>
    <h3>Max Deadlift: {maxDeadlift}</h3>
    <h3>Max Shoulder Press: {maxOverhead}</h3>
    <h3>Max Barbell Row: {maxRow}</h3>
    
    
    
    </div>)
    */
   
export default Profile